//----------------------------------------------------
// Core auth (Django)
//----------------------------------------------------
Table auth_user {
  id int [pk, increment]
  username varchar(150) [not null, unique]
  email varchar(254) [not null]
  is_staff boolean [default: false]
  is_active boolean [default: true]
  date_joined timestamp [default: `now()`]
}

//----------------------------------------------------
// Users & Profiles
//----------------------------------------------------
Table user_profile {
  id int [pk, increment]
  user_id int [not null, unique] // 1â€“1 with auth_user
  is_first_time_buyer boolean [default: true]
  address varchar(255)
  phone_number varchar(20)
}

Ref: user_profile.user_id > auth_user.id // 1-1

Table shipping_address {
  id int [pk, increment]
  user_id int [not null]
  name varchar(255)
  line1 varchar(255)
  line2 varchar(255)
  city varchar(100)
  postcode varchar(20)
  country char(2) [default: 'GB']
  phone varchar(30)
  is_default boolean [default: false]
  created_at timestamp [default: `now()`]
}

Ref: shipping_address.user_id > auth_user.id // user has many addresses

//----------------------------------------------------
// Catalog: Category, Subcategory, ProductType, Tag
//----------------------------------------------------
Table category {
  id int [pk, increment]
  name varchar(100) [not null]
  slug varchar(100) [not null, unique]
}

Table subcategory {
  id int [pk, increment]
  category_id int [not null]
  name varchar(100) [not null]
  slug varchar(100) [not null]
}

Ref: subcategory.category_id > category.id

Table product_type {
  id int [pk, increment]
  name varchar(100) [not null, unique]
}

Table tag {
  id int [pk, increment]
  name varchar(100) [not null, unique]
}

//----------------------------------------------------
// Product & Bundle
//----------------------------------------------------
Table product {
  id int [pk, increment]
  name varchar(100) [not null]
  variant varchar(100) [not null]
  description text // RichTextField
  slug varchar(150) [not null, unique]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  type_id int [not null] // product_type
  tier varchar(20) [note: 'Standard|Pro']
  category_id int [not null]
  subcategory_id int
  price numeric(8,2) [default: 0.00]
  image varchar(255)
  stock int [not null]
  sku varchar(50) [not null, unique]
  product_code varchar(50) [not null, unique]
  image_type varchar(50)
  featured boolean [default: false]
  image_ready boolean [default: false]
  is_draft boolean [default: false]
}

Ref: product.category_id > category.id
Ref: product.subcategory_id > subcategory.id
Ref: product.type_id > product_type.id

Table bundle {
  id int [pk, increment]
  name varchar(100) [not null]
  description text
  slug varchar(150) [not null, unique]
  discount_percentage numeric(6,2) [default: 10.00]
  price numeric(8,2) [default: 0.00]
  subtotal_price numeric(8,2) [default: 0.00]
  bundle_type varchar(20) [default: 'Standard', note: 'Standard|Pro|Special']
  featured boolean [default: false]
  sku varchar(50) [not null, unique]
  bundle_code varchar(50) [not null, unique]
  image varchar(255)
  image_path varchar(255)
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
}

// Through table: products included in a bundle
Table product_bundle {
  id int [pk, increment]
  product_id int [not null]
  bundle_id int [not null]

  Note: 'Through model for Bundle.products; prevent duplicates via unique index'
  Indexes {
    (product_id, bundle_id) [unique]
  }
}

Ref: product_bundle.product_id > product.id
Ref: product_bundle.bundle_id > bundle.id

//----------------------------------------------------
// Tags M2M (pivot tables)
//----------------------------------------------------
Table product_tags {
  product_id int [not null]
  tag_id int [not null]
  Indexes {
    (product_id, tag_id) [unique]
  }
}

Ref: product_tags.product_id > product.id
Ref: product_tags.tag_id > tag.id

Table bundle_tags {
  bundle_id int [not null]
  tag_id int [not null]
  Indexes {
    (bundle_id, tag_id) [unique]
  }
}

Ref: bundle_tags.bundle_id > bundle.id
Ref: bundle_tags.tag_id > tag.id

//----------------------------------------------------
// Saved Items M2M (user_profile <-> products/bundles)
//----------------------------------------------------
Table userprofile_saved_products {
  user_profile_id int [not null]
  product_id int [not null]
  Indexes {
    (user_profile_id, product_id) [unique]
  }
}

Ref: userprofile_saved_products.user_profile_id > user_profile.id
Ref: userprofile_saved_products.product_id > product.id

Table userprofile_saved_bundles {
  user_profile_id int [not null]
  bundle_id int [not null]
  Indexes {
    (user_profile_id, bundle_id) [unique]
  }
}

Ref: userprofile_saved_bundles.user_profile_id > user_profile.id
Ref: userprofile_saved_bundles.bundle_id > bundle.id

//----------------------------------------------------
// Reviews (either Product or Bundle)
//----------------------------------------------------
Table review {
  id int [pk, increment]
  user_id int [not null]
  product_id int // nullable
  bundle_id int  // nullable
  rating int [not null] // 1..5
  comment text
  created_at timestamp [default: `now()`]

  Note: 'Either product_id OR bundle_id must be set (app-level validation).'

  Indexes {
    (user_id, product_id) [unique] // partial unique in code with condition product_id is not null
    (user_id, bundle_id)  [unique] // partial unique in code with condition bundle_id is not null
  }
}

Ref: review.user_id > auth_user.id
Ref: review.product_id > product.id
Ref: review.bundle_id > bundle.id

//----------------------------------------------------
// Orders
//----------------------------------------------------
Table "order" {
  id int [pk, increment]
  user_id int [not null]
  total_price numeric(10,2) [default: 0.00]
  is_paid boolean [default: false]
  payment_status varchar(30) // e.g., succeeded|failed|requires_action|processing
  created_at timestamp [default: `now()`]
}

Ref: "order".user_id > auth_user.id

Table order_item {
  id int [pk, increment]
  order_id int [not null]
  product_id int // nullable
  bundle_id int  // nullable
  quantity int [not null, default: 1]
  unit_price numeric(8,2) [not null, default: 0.00]
  subtotal numeric(8,2) [not null, default: 0.00]

  Note: 'Each item references either product or bundle (nullable pair).'
}

Ref: order_item.order_id > "order".id
Ref: order_item.product_id > product.id
Ref: order_item.bundle_id > bundle.id

//----------------------------------------------------
// Newsletter & Contact
//----------------------------------------------------
Table newsletter_subscriber {
  id int [pk, increment]
  email varchar(254) [not null, unique]
  subscribed_on timestamp [default: `now()`]
  gdpr_agreed boolean [default: false]
}

Table contact_message {
  id int [pk, increment]
  user_id int // nullable
  name varchar(255) [not null]
  email varchar(254) [not null]
  subject varchar(255) [not null]
  message text [not null]
  status varchar(20) [default: 'new', note: 'new|open|resolved']
  created_at timestamp [default: `now()`]
  ip_address varchar(45)
  user_agent varchar(500)
}

Ref: contact_message.user_id > auth_user.id
